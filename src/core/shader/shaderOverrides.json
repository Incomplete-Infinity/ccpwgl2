{
  "blinkinglightspool": {
    "r0.xy=r0.xx*c[0+a0.x].xy;": "if(a0.x==0){r0.xy=r0.xx*c[0].xy;}else if(a0.x==1){r0.xy=r0.xx*c[1].xy;}else if(a0.x==2){r0.xy=r0.xx*c[2].xy;}else if(a0.x==3){r0.xy=r0.xx*c[3].xy;}else if(a0.x==4){r0.xy=r0.xx*c[4].xy;}",
    "texcoord=r3.zzww*c[0+a0.x].zwzz;": "if(a0.x==0){texcoord=r3.zzww*c[0].zwzz;}else if(a0.x==1){texcoord=r3.zzww*c[1].zwzz;}else if(a0.x==2){texcoord=r3.zzww*c[2].zwzz;}else if(a0.x==3){texcoord=r3.zzww*c[3].zwzz;}else if(a0.x==4){texcoord=r3.zzww*c[4].zwzz;}",
    "v0=color": "v0=color;v0.w=0.5"
  },
  "boostervolumetric": {
    "for(int i=0;i<i0.x;++i){": "for(int i=0;i<12;++i){"
  },
  "fxarmorimpactv5": {
    "for(int i=0;i<i0.x;++i){": "for(int i=0;i<255;++i){"
  },
  "flarequad": {
    "r1.xyz=r0.zzw*c[0+a0.x].xyx;": "if(a0.x==0){r1.xyz=r0.zzw*c[0].xyx;}else if(a0.x==1){r1.xyz=r0.zzw*c[1].xyx;}else if(a0.x==2){r1.xyz=r0.zzw*c[2].xyx;}else if (a0.x==3){r1.xyz=r0.zzw*c[3].xyx;}else if(a0.x==4){r1.xyz=r0.zzw*c[4].xyx;}else if(a0.x==5){r1.xyz=r0.zzw*c[5].xyx;}",
    "texcoord.xyw=r0.zzw*c[0+a0.x].zwz;": "if(a0.x==0){texcoord.xyw=r0.zzw*c[0].zwz;}else if(a0.x==1){texcoord.xyw=r0.zzw*c[1].zwz;}else if(a0.x==2){texcoord.xyw=r0.zzw*c[2].zwz;}else if(a0.x==3){texcoord.xyw=r0.zzw*c[3].zwz;}else if(a0.x==4){texcoord.xyw=r0.zzw*c[4].zwz;}else if(a0.x==5){texcoord.xyw=r0.zzw*c[5].zwz;}",
    "r0.x=saturate(sqrt(abs(r0.x)));": "r0.x=clamp(sqrt(abs(r0.x)),0.0,1.0);"
  },
  "flarequadsoft": {
    "r1.xyz=r0.zzw*c[0+a0.x].xyx;": "if(a0.x==0){r1.xyz=r0.zzw*c[0].xyx;}else if(a0.x==1){r1.xyz=r0.zzw*c[1].xyx;}else if(a0.x==2){r1.xyz=r0.zzw*c[2].xyx;}else if (a0.x==3){r1.xyz=r0.zzw*c[3].xyx;}else if(a0.x==4){r1.xyz=r0.zzw*c[4].xyx;}else if(a0.x==5){r1.xyz=r0.zzw*c[5].xyx;}",
    "texcoord.xyw=r0.zzw*c[0+a0.x].zwz;": "if(a0.x==0){texcoord.xyw=r0.zzw*c[0].zwz;}else if(a0.x==1){texcoord.xyw=r0.zzw*c[1].zwz;}else if(a0.x==2){texcoord.xyw=r0.zzw*c[2].zwz;}else if(a0.x==3){texcoord.xyw=r0.zzw*c[3].zwz;}else if(a0.x==4){texcoord.xyw=r0.zzw*c[4].zwz;}else if(a0.x==5){texcoord.xyw=r0.zzw*c[5].zwz;}",
    "r0.x=saturate(sqrt(abs(r0.x)));": "r0.x=clamp(sqrt(abs(r0.x)),0.0,1.0);"
  },
  "motionfx":  {
    "for(int i=0;i<i0.x;++i){": "for(int i=0;i<8;++i){"
  },
  "ubershaderquad" : {
    "r0.xyz=c[0+a0.x].xyx*r0.zzw+r0.wwz;" : "if(a0.x==0){r0.xyz=c[0].xyx*r0.zzw+r0.wwz;texcoord.xy=c[0].zw;}else if(a0.x==1){r0.xyz=c[1].xyx*r0.zzw+r0.wwz;texcoord.xy=c[1].zw;}else if(a0.x==2){r0.xyz=c[2].xyx*r0.zzw+r0.wwz;}else if(a0.x==3){r0.xyz=c[3].xyx*r0.zzw+r0.wwz;}",
    "texcoord.xy=c[0+a0.x].zw;": "if(a0.x==0){texcoord.xy=c[0].zw;}else if(a0.x==1){texcoord.xy=c[1].zw;}else if(a0.x==2){texcoord.xy=c[2].zw;}else if(a0.x==3){texcoord.xy=c[3].zw;}"
  },
  "avatarcombined.vertex" : {
    "uniform vec4 cb0[204];" : "uniform vec4 cb0[204];\nuniform vec4 cb3[26];\n"
  },
  "avatarcombined.fragment" : {
    "for(int i=0;i<i15.x;++i){" : "for(int i=0;i<0;++i){"
  },

  "fxshieldimpactv5.fragment" : {
    "for(int i=0;i<i0.x;++i){": "for(int i=0;i<255;++i){"
  },

  "distortion.fragment" : {
    "r0.z=r0.z*c1.z;" : "r0.z=r0.z/c1.z;",
    "r0.z=1.0/r0.z;" : "r0.z=1.0*r0.z;"
  }

}

